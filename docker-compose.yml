services:
  app:
    container_name: laravel_app
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./application:/var/www/html
    networks:
      - stack
    depends_on:
      - postgres
  postgres:
    image: postgis/postgis
    environment:
      PGUSER: ${POSTGRES_USER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      PGPORT: ${PGPORT}
    restart: unless-stopped
    expose:
      - ${PGPORT}
    ports:
      - ${PGPORT}:5432
    volumes:
      - data_pgdir:/var/lib/postgresql/data
      - ./docker/entrypoint:/docker-entrypoint-initdb.d
    networks:
      - stack
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:7
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_ROOT_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - data_pgadmin:/var/lib/pgadmin
    networks:
      - stack
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "8080:80"
    networks:
      - stack
    volumes:
      - ./application/:/var/www/html/
      - ./docker/logs/nginx:/var/log/nginx
    container_name: nginx

networks:
  stack:
    external: true
    name: ${APP_NAME}_network

volumes:
  data_backup:
    name: ${APP_NAME}_backup
    external: true

  data_pgdir:
    name: ${POSTGRES_VOL}
    external: true

  data_pgadmin:
    name: ${PGADMIN_VOL}
    external: true